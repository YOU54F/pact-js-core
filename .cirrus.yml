
INSTALL_GH_CLI: &INSTALL_GH_CLI
  install_gh_cli_script: |
    curl -fsSL https://cli.github.com/packages/githubcli-archive-keyring.gpg | dd of=/usr/share/keyrings/githubcli-archive-keyring.gpg \
    && chmod go+r /usr/share/keyrings/githubcli-archive-keyring.gpg \
    && echo "deb [arch=$(dpkg --print-architecture) signed-by=/usr/share/keyrings/githubcli-archive-keyring.gpg] https://cli.github.com/packages stable main" | tee /etc/apt/sources.list.d/github-cli.list > /dev/null \
    && apt update \
    && apt install gh -y

RELEASE: &RELEASE
  release_script: ./script/ci/release.sh
  env:
    GITHUB_TOKEN: ENCRYPTED[636f316600928de28b5c36027cc39d9796bc0d0eca2a181368f255ad61540f13bb38cdce09b6428774f315bbf45e0ada]
    GH_PRE_RELEASE_UPLOAD: true 

PREBUILD_AND_TEST: &PREBUILD_AND_TEST
  prebuild_script: NODE_VERSION=20 script/ci/prebuild.sh
  <<: *RELEASE
  test_20_script:  NODE_VERSION=20 script/ci/build-and-test.sh && script/ci/clean.sh
  test_18_script:  NODE_VERSION=18 script/ci/build-and-test.sh && script/ci/clean.sh
  test_16_script:  NODE_VERSION=16 script/ci/build-and-test.sh && script/ci/clean.sh

linux_arm_task:
  env:
    SET_NVM: "true"
  arm_container:
  # container:
    image: node:20-slim
  cirrus_setup_script: chmod +x script/**/* && chmod +x script/**
  setup_script: apt update --yes && apt install --yes curl python3 make build-essential g++ unzip zip git
  pre_req_script: curl -o- https://raw.githubusercontent.com/creationix/nvm/v0.39.3/install.sh | bash
  <<: *INSTALL_GH_CLI
  <<: *PREBUILD_AND_TEST
  artifacts:
    path: prebuilds/*.tar.gz

macos_arm_task:
  macos_instance:
    image: ghcr.io/cirruslabs/macos-ventura-base:latest
  env:
    SET_NVM: "true"
  cirrus_setup_script: chmod +x script/**/* && chmod +x script/**
  dry_run_check_script: |
    npx --yes commit-and-tag-version --dry-run && git remote -v
  pre_req_script: brew install nvm
  <<: *PREBUILD_AND_TEST
  artifacts:
    path: prebuilds/*.tar.gz