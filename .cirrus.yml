env:
  PACT_BROKER_FEATURES: publish_pacts_using_old_api

BUILD_TEST_TASK_TEMPLATE: &BUILD_TEST_TASK_TEMPLATE
  arch_check_script:
    - uname -am
  prebuild_script:
    - node --version
    - chmod +x script/**/* && chmod +x script/**
    - script/download-libs.sh
    - npm ci --ignore-scripts
    - npx prebuildify --napi
    - tar -czf prebuilds.tar.gz prebuilds
    - ls
    - rm -rf ffi build
  test_20_script:
    - ls
    - node --version
    - script/ci/build-and-test.sh
    - ls
    - npm run clean
    - rm -rf node_modules
    - ls
  test_18_script:
    - . $NVM_DIR/nvm.sh
    - nvm install 18
    - nvm use 18
    - node --version
    - script/ci/build-and-test.sh
    - ls
    - npm run clean
    - rm -rf node_modules
    - ls
  test_16_script:
    - . $NVM_DIR/nvm.sh
    - nvm install 18
    - nvm use 18
    - node --version
    - script/ci/build-and-test.sh
    - ls
    - npm run clean
    - rm -rf node_modules
    - ls

linux_arm64_task:
  env:
    NVM_DIR: /usr/local/nvm
  arm_container:
    image: node:20-slim
  install_script:
    - apt update --yes && apt install --yes curl python3 make build-essential g++ unzip zip
    - curl --silent -o- https://raw.githubusercontent.com/creationix/nvm/v0.31.2/install.sh | bash
  << : *BUILD_TEST_TASK_TEMPLATE
  artifacts:
    path: "prebuilds.tar.gz"

linux_amd64_task:
  env:
    NVM_DIR: /usr/local/nvm
  container:
    image: node:20-slim
  install_script:
    - apt update --yes && apt install --yes curl python3 make build-essential g++ unzip zip 
    - curl --silent -o- https://raw.githubusercontent.com/creationix/nvm/v0.31.2/install.sh | bash
  << : *BUILD_TEST_TASK_TEMPLATE
  artifacts:
    path: "prebuilds.tar.gz"

macos_arm_prebuilder_task:
  macos_instance:
    image: ghcr.io/cirruslabs/macos-ventura-base:latest
  env:
    PACT_BROKER_FEATURES: publish_pacts_using_old_api
    NVM_DIR: ${HOME}/.nvm
    PATH: ${NVM_DIR}:${PATH}
  install_node_script:
    - brew install nvm
    - . $(brew --prefix nvm)/nvm.sh
    - nvm install 20
    - nvm install 18
    - nvm install 16
  prebuild_script:
    - . $(brew --prefix nvm)/nvm.sh
    - nvm use 20
    - node --version
    - chmod +x script/**/* && chmod +x script/**
    - script/download-libs.sh
    - npm ci --ignore-scripts
    - npx prebuildify --napi
    - tar -czf prebuilds.tar.gz prebuilds
    - ls
    - rm -rf ffi build 
  test_20_script:
    - . $(brew --prefix nvm)/nvm.sh
    - nvm use 20
    - node --version
    - script/ci/build-and-test.sh
    - ls
    - npm run clean
    - rm -rf node_modules
    - ls
  test_18_script:
    - . $(brew --prefix nvm)/nvm.sh
    - nvm use 18
    - node --version
    - script/ci/build-and-test.sh
    - ls
    - npm run clean
    - rm -rf node_modules
    - ls
  test_16_script:
    - . $(brew --prefix nvm)/nvm.sh
    - nvm use 16
    - node --version
    - script/ci/build-and-test.sh
    - ls
    - npm run clean
    - rm -rf node_modules
    - ls
  artifacts:
    path: "prebuilds.tar.gz"

macos_x64_prebuilder_task:
  macos_instance:
    image: ghcr.io/cirruslabs/macos-ventura-base:latest
  env:
    PACT_BROKER_FEATURES: publish_pacts_using_old_api
    NVS_HOME: ${HOME}/.nvs
    PATH: ${NVS_HOME}:${PATH}
  install_nvs_script: |
    git clone https://github.com/jasongin/nvs "$NVS_HOME"
    . "$NVS_HOME/nvs.sh" install
  install_rosetta_script: softwareupdate --install-rosetta --agree-to-license
  install_node_x64_script: | 
    . "$NVS_HOME/nvs.sh"
    nvs add 20/x64
    nvs add 18/x64
    nvs add 16/x64
    nvs use 20/x64
    file $(which node) | grep -e 'x64'
    node --version
  prebuild_script:
    - ls
    - . "$NVS_HOME/nvs.sh"
    - nvs use 20/x64
    - file $(which node) | grep -e 'x64'
    - node --version
    - chmod +x script/**/* && chmod +x script/**
    - script/download-libs.sh
    - npm ci --ignore-scripts
    - npx prebuildify --napi
    - tar -czf prebuilds.tar.gz prebuilds
    - ls
    - rm -rf ffi build 
  test_20_script:
    - . "$NVS_HOME/nvs.sh"
    - nvs use 20/x64
    - file $(which node) | grep -e 'x64'
    - node --version
    - ls
    - script/ci/build-and-test.sh
    - ls
    - npm run clean
    - rm -rf node_modules
    - ls
  test_18_script:
    - . "$NVS_HOME/nvs.sh"
    - nvs use 18/x64
    - file $(which node) | grep -e 'x64'
    - node --version
    - script/ci/build-and-test.sh
    - ls
    - npm run clean
    - rm -rf node_modules
    - ls
  test_16_script:
    - . "$NVS_HOME/nvs.sh"
    - nvs use 16/x64
    - file $(which node) | grep -e 'x64'
    - node --version
    - script/ci/build-and-test.sh
    - ls
    - npm run clean
    - rm -rf node_modules
    - ls
  artifacts:
    path: "prebuilds.tar.gz"